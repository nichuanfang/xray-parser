# 注: 定时任务的yml只有放在主分支上面才生效!
name: issue-ssl-certificate

# 全局环境变量
env:
  # Checkout 到的目录
  CERTS_OUTPUT_BASE: certs
  # 证书输出目录
  CERTS_OUTPUT_DIRECTORY: cinima.asia
  # 证书文件名
  FILE_FULLCHAIN: fullchain.pem
  # 私钥文件名
  FILE_KEY: privatekey.key

on:
  # 手动触发 相关文档 https://docs.github.com/cn/actions/reference/events-that-trigger-workflows#workflow_dispatch
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
          - info
          - warning
          - debug
      tags:
        description: 'Test scenario tags'
        required: false
        type: boolean
      environment:
        description: 'Environment to run tests against'
        required: true
        type: choice
        options:
          - client
          - server

  schedule:
    - cron: '0 5 * * *'
jobs:
  issue-ssl-certificate:
    name: Issue SSL certificate
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: client

      # 安装 acme.sh
      - name: Install acme.sh
        shell: bash
        run: curl -s https://get.acme.sh | sh

      # 解压 acme.sh 配置信息
      - name: Extract account files for acme.sh
        shell: bash
        run: |
          echo "$ACME_SH_ACCOUNT_TAR" | base64 -d | tar -C ~/.acme.sh -xz
        env:
          # Base64 编码的 acme.sh 配置信息
          ACME_SH_ACCOUNT_TAR: ${{ secrets.ACME_SH_ACCOUNT_TAR }}

      - name: 申请证书
        shell: bash
        run: |
          ~/.acme.sh/acme.sh --issue        \
            -d "vencenter.cn"   --dns dns_cf \
            -d "*.vencenter.cn" --dns dns_cf \
            --server letsencrypt

      # 导出证书
      - name: 导出证书
        shell: bash
        run: |
          ACME_SH_TEMP_DIR="$(mktemp -d)"
          ACME_SH_TEMP_FILE_FULLCHAIN="$ACME_SH_TEMP_DIR/fullchain.pem"
          ACME_SH_TEMP_FILE_KEY="$ACME_SH_TEMP_DIR/key.pem"

          ~/.acme.sh/acme.sh --install-cert -d "$ACME_SH_FIRST_DOMAIN" --fullchain-file "$ACME_SH_TEMP_FILE_FULLCHAIN" --key-file "$ACME_SH_TEMP_FILE_KEY"

          [[ -z "$ACME_SH_OUTPUT_FULLCHAIN" ]] || (mkdir -p "$(dirname "$ACME_SH_OUTPUT_FULLCHAIN")" && cp "$ACME_SH_TEMP_FILE_FULLCHAIN" "$ACME_SH_OUTPUT_FULLCHAIN")
          [[ -z "$ACME_SH_OUTPUT_KEY" ]] || (mkdir -p "$(dirname "$ACME_SH_OUTPUT_KEY")" && cp "$ACME_SH_TEMP_FILE_KEY" "$ACME_SH_OUTPUT_KEY")

          rm -rf "$ACME_SH_TEMP_DIR"
        env:
          # 修改此处的 example.com 为申请时填写的第一个域名
          ACME_SH_FIRST_DOMAIN: vencenter.cn
          ACME_SH_OUTPUT_FULLCHAIN: ${{ env.CERTS_OUTPUT_BASE }}/${{ env.CERTS_OUTPUT_DIRECTORY }}/${{ env.FILE_FULLCHAIN }}
          ACME_SH_OUTPUT_KEY: ${{ env.CERTS_OUTPUT_BASE }}/${{ env.CERTS_OUTPUT_DIRECTORY }}/${{ env.FILE_KEY }}

      - name: checkout出docker项目
        uses: actions/checkout@v3.5.2
        with:
          repository: nichuanfang/docker
          path: docker
          ref: master
          token: ${{ secrets.GH_TOKEN }}

      - name: 复制证书
        shell: bash
        run: |
          cp dist/cert.pem docker/dockerfile_work/xray/cert
          cp dist/key.pem docker/dockerfile_work/xray/cert
          chmod +x docker/dockerfile_work/xray/cert/*.pem

      - name: 更新证书文件
        uses: Smart-Transportation/push@v1.3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: 'master'
          author_email: 'github-actions[bot]@users.noreply.github.com'
          author_name: 'github-actions[bot]'
          message: '🐳 chore: 更新https证书'
          directory: /home/runner/work/xray-parser/docker
          repository: nichuanfang/docker
